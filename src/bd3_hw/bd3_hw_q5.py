# SQL -> Structured Query Language
# It is used to work with data that is stored on RDBMS.

# Hive 
# It is based on Hadoop and provides SQL-like interface, called HiveQL.
# Data handled by Hive is stored in RDBMS format.
# Architecture:
# Metastore -> used to store metadata like location of files and tables. It also stores some important data to prevent data loss.
# Driver -> manages the process. It executes statements and saves metadata produced during process.
# Compiler -> checks for syntax errors, transforms HiveQL queries to executable statements by building Abstract Syntax Tree.
# Optimizer -> optimizes Directed Acyclic Graph generated by Compiler so that redundant computation is avoided.
# Executor -> pipelines tasks to be run, builds instruction pipeline.
# CLI -> command line interface to take HiveQL queries as inputs.

# Impala
# It is a query engine that is used to run SQL queries efficiently.
# Impala is massively parallel processing engine.
# Impala provides fast SQL queries to data stored in HDFS and Apache HBase.

# Differences:
# Hive works with data stored in RDBMS, Impala with HDFS and Apache HBase.
# SQL is older and more fundamental than other two. 
# Hive provides SQL-like interface that does not require low-level Java code, Impala is SQL query engine.

# Differences between Hive and Impala:
# Hive is fault tolerant, Impala is not
# Hive does batch processing, Impala parallel processing
# Hive is mostly used for analysis and visualization, Impala for doing queries on HBase and HDFS.
